[project]
name = "napari-dinosim"
#dynamic = ["version"]
version = "0.0.3"  # Using static version instead of dynamic
description = "A simple plugin to use DinoSim in napari"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
  {name = "Aitor Gonzalez-Marfil"},
  {email = "aitorgacad@gmail.com"},
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Framework :: napari",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Image Processing",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
requires-python = ">=3.9"
dependencies = [
    "numpy",
    "magicgui",
    "qtpy",
    "torch",
    "torchvision",
    "tqdm",
    "pillow",
    "matplotlib",
    "opencv-python",
    "tifffile",
    "napari"
]

[project.optional-dependencies]
testing = [
    "tox",
    "pytest",
    "pytest-cov",
    "pytest-qt",
    "napari",
    "pyqt5",
]

[project.entry-points."napari.manifest"]
napari-dinosim = "napari_dinosim:napari.yaml"

[build-system]
requires = ["setuptools>=42.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
where = ["src"]
include = ["napari_dinosim*"]

[tool.setuptools.package-data]
"napari_dinosim" = ["*.yaml"]

# Using static version instead of dynamic
# [tool.setuptools.dynamic]
# version = {attr = "napari_dinosim.__init__.__version__"}

[tool.black]
line-length = 79
target-version = ['py38', 'py39', 'py310']

[tool.ruff]
line-length = 79
lint.select = [
    "E", "F", "W", #flake8
    "UP", # pyupgrade
    "I", # isort
    "BLE", # flake8-blind-exception
    "B", # flake8-bugbear
    "A", # flake8-builtins
    "C4", # flake8-comprehensions
    "ISC", # flake8-implicit-str-concat
    "G", # flake8-logging-format
    "PIE", # flake8-pie
    "SIM", # flake8-simplify
]
lint.ignore = [
    "E501", # line too long. let black handle this
    "UP006", "UP007", # type annotation. As using magicgui require runtime type annotation then we disable this.
    "SIM117", # flake8-simplify - some of merged with statements are not looking great with black, reanble after drop python 3.9
]

exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".mypy_cache",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "*vendored*",
    "*_vendor*",
]

target-version = "py38"
fix = true
